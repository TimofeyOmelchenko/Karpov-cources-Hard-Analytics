WITH user_weeks AS (
    SELECT 
        user_id, 
        groupUniqArray(toStartOfWeek(time)) AS weeks_visited
    FROM simulator_20250120.feed_actions
    GROUP BY user_id
),

all_weeks AS (
    SELECT DISTINCT toStartOfWeek(time) AS week
    FROM simulator_20250120.feed_actions
),

gone_users AS (
    SELECT 
        w.week,
        uw.user_id,
        'gone' AS status
    FROM all_weeks w
    JOIN user_weeks uw ON 1 = 1  -- Декартово произведение, чтобы сравнить массив
    WHERE has(uw.weeks_visited, addWeeks(w.week, -1)) -- Был активен на прошлой неделе
          AND NOT has(uw.weeks_visited, w.week)       -- Не активен на этой неделе
),

active_users AS (

    SELECT 
        w.week,
        uw.user_id,
        IF(has(uw.weeks_visited, addWeeks(w.week, -1)), 'old', 'new') AS status
    FROM all_weeks w
    JOIN user_weeks uw ON 1 = 1 
    WHERE has(uw.weeks_visited, w.week)
)

SELECT 
    week,
    status,
    COUNT(DISTINCT user_id) * 
        (CASE WHEN status = 'gone' THEN -1 ELSE 1 END) AS user_count
FROM (
    SELECT week, user_id, status FROM gone_users
    UNION ALL
    SELECT week, user_id, status FROM active_users
) AS combined_users
GROUP BY week, status
ORDER BY week, status;

